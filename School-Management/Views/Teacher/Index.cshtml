@model IEnumerable<School_Management.Models.AssignmentModel>

@{
    ViewData["Title"] = "Index";
}


<div class="section mt-3">
    <div class="bg-dark p-3 roundCorder">
        <h4>Teacher Dashboard</h4>
    </div>

    @* Stats Cars *@
    <div class="row mt-4">
        <div class="col-md-3 col-sm-6">
            <div class="bg-danger p-4 roundCorder">
                <p># of Students</p>
                <span>5</span>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 ">
            <div class="bg-info p-4 roundCorder">
                <p># of Classes</p>
                <span>25</span>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 ">
            <div class="bg-success p-4 roundCorder">
                <p># of Pending Grades</p>
                <span>15</span>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 ">
            <div class="bg-primary p-4 roundCorder">
                <p># of Assignments</p>
                <span>42</span>
            </div>
        </div>
    </div>

    @* charts *@
    <div class="row mt-4">
        <div class="col-md-6 col-sm-12">
            <div class="bg-dark p-4 roundCorder">
                <p>Average Student Performance</p>
                <hr class="bg-white" />
                <canvas id="growthChart" width="100%" height="45"></canvas>
            </div>
        </div>
        <div class="col-md-6 col-sm-12">
            <div class="bg-dark p-4 roundCorder">
                <p>Student Count</p>
                <hr class="bg-white" />
                <canvas id="performanceChart" width="100%" height="45"></canvas>
            </div>
        </div>
    </div>

    @* Students Tbl *@
    <div class="roundCorder mt-4">
        <p>Assignment Data</p>
        <hr class="bg-white" />
        <DIV class="table-responsive">
            <table id="dataTable" class="table table-bordered" width:100% cellspacing="0">
                <thead>
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Grade)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Deadline)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.File)
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Grade)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Deadline)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.File)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Submissions", "Details", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr> 
                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Grade)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Deadline)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.File)
                        </th>
                        <th>Action</th>
                    </tr>
                </tfoot>
            </table>
        </DIV>

    </div>
</div>

@* Load datatable css *@
<link href="~/DataTables/DataTables-1.10.23/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
@* Load datatable js *@
@section Scripts{
    <script src="~/DataTables/DataTables-1.10.23/js/jquery.dataTables.min.js"></script>
    <script src="~/DataTables/DataTables-1.10.23/js/dataTables.bootstrap4.min.js"></script>

}

<script>

    $(document).ready(function () {
        $('#dataTable').DataTable();
    });

    //charts
    Chart.defaults.global.defaultFontColor = 'white ';
    var ctx = document.getElementById('growthChart').getContext('2d');
    var pChart = document.getElementById('performanceChart').getContext('2d');

    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],
            datasets: [{
                label: 'Student Performance [July-November]',
                data: [89, 70, 49, 80, 45, 92],
                backgroundColor: [
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 0
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var myChart = new Chart(pChart, {
        type: 'bar',
        data: {
            labels: ['Math', 'English', 'Science', 'Geography'],
            datasets: [{
                label: '# of Students Per Subject',
                data: [32, 19, 53, 45],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>

 